install.packages("ggplot2")
install.packages("tm")
install.packages("QCA")
install.packages("devtools")
require(devtools)
pkgs = c('slidify', 'slidifyLibraries')
install_github(pkgs, 'ramnathv', ref = 'dev')
install.packages("Agreement")
install.packages(c("class", "codetools", "MASS", "mgcv"))
library("Agreement", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(DCLHb);HemocueAve=apply(DCLHb[,c("HEMOCUE1","HEMOCUE2")],1,mean);SigmaAve=apply(DCLHb[,c("SIGMA1","SIGMA2")],1,mean);agr=agreement(y=HemocueAve,x=SigmaAve,V_label="Hemacue",H_label="Sigma",min=0,max=2000,by=250,CCC_a=0.9775,CP_aplot(agr);
data(DCLHb);
HemocueAve=apply(DCLHb[,c("HEMOCUE1","HEMOCUE2")],1,mean);
SigmaAve=apply(DCLHb[,c("SIGMA1","SIGMA2")],1,mean);
agr=agreement(y=HemocueAve,x=SigmaAve,V_label="Hemacue",H_label="Sigma",min=0,max=2000,by=250,CCC_a=0.9775,CP_a
plot(agr);
data(DCLHb);
HemocueAve=apply(DCLHb[,c("HEMOCUE1","HEMOCUE2")],1,mean);
SigmaAve=apply(DCLHb[,c("SIGMA1","SIGMA2")],1,mean);
agr=agreement(y=HemocueAve,x=SigmaAve,V_label="Hemacue",H_label="Sigma",min=0,max=2000,by=250,CCC_a=0.9775,CP_a=0.9,TDI_a=150,error="const",target="random",dec=3,alpha=0.05);
plot(agr);
DCLHb
install.packages("vcd")
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
(K <- Kappa(SexualFun))
(K <- Kappa(SexualFun))
confint(K)
agree <- agreementplot(SexualFun, main="Is sex fun?")
SexualFun
library(Agreement)
library(vcd)
SexualFun
(K <- Kappa(SexualFun))
confint(K)
agree <- agreementplot(SexualFun, main="Is sex fun?")
unlist(agree)
# We have thus produced an agreement plot, also called a Bangdiwala's Observer Agreement Chart. Note that our agreement plot is a representation of a k x k confusion matrix. The observed and expected diagonal elements are represented by superposed black and white rectangles, respectively. The extent to which the rectangles are above or below the line indicates the extent of any disagreement. (above and/or below indicates direction of the disagreement). The function also computes two statistic measuring the strength of agreement (relation of respective area sums). The first statistic is accessed using the term Bandiwala. This statistic is the unweighted agreement strength statistic. The second statistic makes an adjustment for ordered ratings, and is accessed using the code Bangdiwala_Weighted. Both statistics are measured on a scale from 0 to 1, where 1 indicates perfect agreement and 0 indicates perfect disagreement.
install.packages("irr")
library(irr)
data(diagnoses)
df <- diagnoses[,1:3]
kappam.fleiss(df)
}
unified.agreement(dataset, var = NA, k, m, CCC_a = 0.9775, CCC_a_intra = 0.995, CCC_a_inter = 0.9775, CCC_a_total = 0.9775, CP_a = 0.9, TDI_a = 150, TDI_a_intra = 75, TDI_a_inter = 150, TDI_a_total = 150, tran = 0, error = "prop", dec = 4, alpha = 0.025, iter = 35, toe = 1e-10)
unified.agreement(dataset=DCLHb, var = NA, k, m, CCC_a = 0.9775, CCC_a_intra = 0.995, CCC_a_inter = 0.9775, CCC_a_total = 0.9775, CP_a = 0.9, TDI_a = 150, TDI_a_intra = 75, TDI_a_inter = 150, TDI_a_total = 150, tran = 0, error = "prop", dec = 4, alpha = 0.025, iter = 35, toe = 1e-10)
data(DCLHb)
unified.agreement(dataset=DCLHb, var = NA, k, m, CCC_a = 0.9775, CCC_a_intra = 0.995, CCC_a_inter = 0.9775, CCC_a_total = 0.9775, CP_a = 0.9, TDI_a = 150, TDI_a_intra = 75, TDI_a_inter = 150, TDI_a_total = 150, tran = 0, error = "prop", dec = 4, alpha = 0.025, iter = 35, toe = 1e-10)
DCLHb
data(DCLHb);
library("Agreement", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(DCLHb);
ua <- unified.agreement(dataset=DCLHb, var=c("HEMOCUE1","HEMOCUE2","SIGMA1","SIGMA2"), k=2, m=2, CCC_a_intra=0.9943, CCC_a_inter=0.9775, CCC_a_total=0.9775, CP_a=0.9, tran=1, TDI_a_intra=75, TDI_a_inter=150, TDI_a_total=150, error="const", dec=1, alpha=0.05);
summary(ua);
DCLHb
library("irr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(video)
agree(video)     # Simple percentage agreement
agree(video, 1)  # Extended percentage agreement
agree(video, 1)  # Extended percentage agreement
video
install.packages("lpSolve")
library("lpSolve", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("lpSolveAPI")
install.packages(c("formatR", "labeling", "markdown", "mgcv", "NLP"))
install.packages("kappaSize")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install_github("rasmusab/bayesian_first_aid")
install.packages("tcltk2")
library("tcltk2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tcltk", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:tcltk", unload=TRUE)
detach("package:tcltk2", unload=TRUE)
library("tcltk2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tcltk2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rjags", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("mcmc")
install.packages("MCMCpack")
library("mcmc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("MCMCpack", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
require(mcmc)
require(MCMCpack)
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
posterior <- MCMCpoisson(counts ~ outcome + treatment)
plot(posterior)
?gl
gl(2, 8, labels = c("Control", "Treat"))
gl(3,1,9)
gl(3,3)
posterior <- (counts ~ outcome + treatment)
posterior
plot(posterior)
summary(posterior)
library("kappaSize", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("httr")
install.packages("boot")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("plotrix")
library("plotrix", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("openintro")
mi <- read.csv("~/Desktop/mi.csv")
View(mi)
install.packages("tcltk2")
setwd('/Users/rpietro/articles/motivational_interview/')
